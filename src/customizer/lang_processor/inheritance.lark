// https://github.com/lark-parser/lark/blob/master/lark/grammars/common.lark
// https://lark-parser.readthedocs.io/en/latest/grammar.html

?start: aspect_container+
aspect_container: abstract_aspect | intermediate_aspect |  concrete_aspect | primitive_aspect

abstract_aspect: "abstract" "aspect" aspect_name "{" constructor (abstract_method | method | aspect)* "}"

intermediate_aspect: "abstract" "aspect" aspect_name "extends" aspect_name "{" (super constructor | constructor super) (abstract_method | method | aspect)* "}"
constructor: CONSTRUCTOR "("constructor_args")"
CONSTRUCTOR.1: "constructor"
constructor_args: (CNAME ("," CNAME)*)?
abstract_method: ABSTRACT_METHOD_MODIFIER func_signature
ABSTRACT_METHOD_MODIFIER.1: "abstract"

concrete_aspect: "aspect" aspect_name "extends" aspect_name "{" super (method | aspect)* "}"
super: SUPER "("super_args")"
SUPER.1: "super"
super_args: (super_arg ("," super_arg)*)?
super_arg: /[^,]/+

primitive_aspect: "aspect" aspect_name "{" (method | aspect)* "}"
aspect_name: CNAME
method: func_signature "{" body "}"
aspect: advice_type BLOCK_START body BLOCK_END

%import common (CNAME, WS, C_COMMENT, CPP_COMMENT)
%import .aspect (body, block, BLOCK_START, BLOCK_END, advice_type, BEFORE, AFTER, AROUND, func_signature, func_name, func_args)

%ignore WS
%ignore C_COMMENT // /* */
%ignore CPP_COMMENT // //