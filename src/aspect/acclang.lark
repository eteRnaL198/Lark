// https://github.com/lark-parser/lark/blob/master/lark/grammars/common.lark

?start: aspect*
aspect: advice_type pointcut "{" advice_body "}"

advice_type: before | after | around
before: "before():"
after: "after():"
around: "around():"
advice_body: /.+/+

pointcut: primitive_pointcut+
primitive_pointcut: call | execution | get | set | infunc
call: "call("func_signature")"
execution: "execution("func_signature")"
get: "get()"
set: "set()"
infunc: "infunc("func_name")"

func_signature: WORD func_name "("func_args")"
func_name: CNAME
func_args: (WORD ("," WORD)*)?

%import common (CNAME, WORD, WS)
%ignore WS
