abstract aspect BaseSystemCall {
  constructor(
    system_call, os_service_id,
    log_leave,
    arg,
    call_check,
    log_val
  )

  abstract void local_system_call()

  void before_advice() { }
  void after_advice() { }
  void after_check_callevel() { }
  void before_set_tsk_location() { }
  void after_set_tsk_location() { }
  void error_hook2() { }

  around(): execution(StatusType this.system_call(this.arg)) {
    this.before_advice();
    ercd = E_OK;
    CHECK_CALLEVEL(this.call_check);
    this.after_check_callevel();
    lock_cpu();
    if( NODE_ID(glbtskid) == MY_NODE_ID ) {
      this.local_system_call();
    } else {
      glbtskid_store = glbtskid;
      this.before_set_tsk_location();
      tsk_location = check_target_location(glbtskid_store);
      this.after_set_tsk_location();
    }
    this.after_advice();
  exit:
    unlock_cpu();
    this.log_leave(this.log_val);
    return(ercd);
  error_exit:
    lock_cpu();
  d_error_exit:
    _errorhook_par1.tskid = TSKID(glbtskid);
    this.error_hook2();
    call_errorhook(ercd, this.os_service_id);
    unlock_cpu();
    goto exit;
  }
}