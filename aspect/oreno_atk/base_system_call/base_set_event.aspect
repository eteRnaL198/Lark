abstract aspect BaseSetEvent extends BaseSystemCall {
  super(
    SetEvent, OSServiceId_SetEvent,
    LOG_SETEVT_LEAVE,
    (GlbTaskType, EventMaskType), // TODO handle it
    TCL_TASK | TCL_ISR2 | TCL_ERROR | TCL_PREPOST,
    (ercd, *p_state)
  )
  constructor(
    call_os,
    request_sending_service,
    get_return_value,
  )

  void local_system_call() {
    D_CHECK_STATE(tcb_tstat[TSKID(glbtskid)] != TS_DORMANT);
    *p_mask = tcb_curevt[TSKID(glbtskid)];
  }

  void before_set_tsk_location() {
    mask_store = mask;
  }
  
  void error_hook2() {
     _errorhook_par2.mask = mask
  }

  void after_sending_msg() { }
  void set_flg() { }

  void after_set_tsk_location() {
    if (tsk_location == this.call_os) {
      this.set_flg()
      this.request_sending_service(glbtskid_store, OSServiceId_SetEvent, (UINT)mask_store)
      ercd = (UINT8)(this.get_return_value());
      this.after_sending_msg()
    }
  }
}